// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingApp.Infrastructure;

#nullable disable

namespace TrainingApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230430120932_Seed Excercises")]
    partial class SeedExcercises
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("TrainingApp.Application.Entities.Metric", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<float?>("FatPercentage")
                        .HasColumnType("REAL");

                    b.Property<float?>("MusclePercentage")
                        .HasColumnType("REAL");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Metrics", (string)null);
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.Excercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<bool>("InUse")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBuiltIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Excercise", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2423242-e556-4e47-8bba-78f90b2f4e40"),
                            InUse = true,
                            IsBuiltIn = true,
                            Name = "Pullups"
                        },
                        new
                        {
                            Id = new Guid("d88f983d-4e0a-4a57-8713-34e33a732f7d"),
                            InUse = true,
                            IsBuiltIn = true,
                            Name = "Ab curl"
                        },
                        new
                        {
                            Id = new Guid("2b9f031c-15bc-47d3-9c20-72352a21387f"),
                            InUse = true,
                            IsBuiltIn = false,
                            Name = "Custom 1"
                        });
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.Set", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.Property<Guid>("WorkoutExcerciseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutExcerciseId");

                    b.ToTable("Sets", (string)null);
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WorkoutTemplateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutTemplateId");

                    b.ToTable("Workouts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e48882de-d8a7-49cd-a085-67fac0c35e28"),
                            Date = new DateTime(2023, 4, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDone = false,
                            Name = "Abs",
                            Notes = "This is a note"
                        },
                        new
                        {
                            Id = new Guid("7f387b3f-5742-46b8-a1ce-2020b3ab8dcf"),
                            Date = new DateTime(2023, 4, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDone = false,
                            Name = "Pull",
                            Notes = "This is a note"
                        },
                        new
                        {
                            Id = new Guid("f737b4c6-adb5-41d9-b4a7-f5f7f4bd3a74"),
                            Date = new DateTime(2023, 4, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDone = true,
                            Name = "Abs",
                            Notes = "This is another note"
                        });
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.WorkoutTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<bool>("InUse")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBuiltIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkoutTemplates", (string)null);
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.WorkoutTemplates2Excercises", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExcerciseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("WorkoutTemplateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExcerciseId");

                    b.HasIndex("WorkoutTemplateId");

                    b.ToTable("WorkoutTemplates_Excercises", (string)null);
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.Workouts2Excersices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExcerciseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExcerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Workout_Excercises", (string)null);
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.Set", b =>
                {
                    b.HasOne("TrainingApp.Application.Entities.Workout.Workouts2Excersices", "Workouts2Excercises")
                        .WithMany("Sets")
                        .HasForeignKey("WorkoutExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workouts2Excercises");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.Workout", b =>
                {
                    b.HasOne("TrainingApp.Application.Entities.Workout.WorkoutTemplate", "WorkoutTemplate")
                        .WithMany("Workouts")
                        .HasForeignKey("WorkoutTemplateId");

                    b.Navigation("WorkoutTemplate");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.WorkoutTemplates2Excercises", b =>
                {
                    b.HasOne("TrainingApp.Application.Entities.Workout.Excercise", "Excercise")
                        .WithMany("WorkoutTemplates2Excercises")
                        .HasForeignKey("ExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingApp.Application.Entities.Workout.WorkoutTemplate", "WorkoutTemplate")
                        .WithMany("WorkoutTemplates2Excercises")
                        .HasForeignKey("WorkoutTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercise");

                    b.Navigation("WorkoutTemplate");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.Workouts2Excersices", b =>
                {
                    b.HasOne("TrainingApp.Application.Entities.Workout.Excercise", "Excercise")
                        .WithMany("Workouts2Excersices")
                        .HasForeignKey("ExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingApp.Application.Entities.Workout.Workout", "Workout")
                        .WithMany("Workouts2Excersices")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.Excercise", b =>
                {
                    b.Navigation("WorkoutTemplates2Excercises");

                    b.Navigation("Workouts2Excersices");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.Workout", b =>
                {
                    b.Navigation("Workouts2Excersices");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.WorkoutTemplate", b =>
                {
                    b.Navigation("WorkoutTemplates2Excercises");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout.Workouts2Excersices", b =>
                {
                    b.Navigation("Sets");
                });
#pragma warning restore 612, 618
        }
    }
}
