// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingApp.Infrastructure;

#nullable disable

namespace TrainingApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230512141608_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("TrainingApp.Application.Entities.Excercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExcersiceType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBuiltIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Excercises", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("89ec10fa-1e7b-43f2-9edd-a8e1f58c52b8"),
                            ExcersiceType = 0,
                            IsBuiltIn = true,
                            Name = "Pullups"
                        },
                        new
                        {
                            Id = new Guid("d1755173-1b1f-4ba5-adb5-5d285b436fa3"),
                            ExcersiceType = 0,
                            IsBuiltIn = true,
                            Name = "Ab curl"
                        },
                        new
                        {
                            Id = new Guid("b8188c25-ae5b-44a9-ba04-1ac4e17bed68"),
                            ExcersiceType = 1,
                            IsBuiltIn = false,
                            Name = "Custom 1"
                        });
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Routine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Routines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce63b05a-ea74-43d2-b692-b6f1eb86c54a"),
                            Name = "Abs"
                        },
                        new
                        {
                            Id = new Guid("437294dd-f094-4b16-b812-21ea08edd23d"),
                            Name = "Pull"
                        });
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.RoutineDates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoutineId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoutineId");

                    b.ToTable("RoutineDates", (string)null);
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.RoutineExcersices", b =>
                {
                    b.Property<Guid>("RoutineId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExcerciseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoutineId", "ExcerciseId");

                    b.HasIndex("ExcerciseId");

                    b.ToTable("RoutineExcercises", (string)null);
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Set", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Measure")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("WorkoutExcerciseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutExcerciseId");

                    b.ToTable("Sets", (string)null);
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Workouts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("583e7329-ff8a-4cac-8d53-dfdd0b90940f"),
                            Date = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDone = false,
                            Name = "Abs"
                        },
                        new
                        {
                            Id = new Guid("2900f8c7-054c-4c53-9aff-b8dd25e7dee7"),
                            Date = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDone = false,
                            Name = "Pull"
                        },
                        new
                        {
                            Id = new Guid("b275bb22-41f1-4b2e-b1f2-b4706646d30a"),
                            Date = new DateTime(2023, 5, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDone = true,
                            Name = "Abs"
                        });
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.WorkoutExcersices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExcerciseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExcerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutExcercises", (string)null);
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.RoutineDates", b =>
                {
                    b.HasOne("TrainingApp.Application.Entities.Routine", "Routine")
                        .WithMany("Dates")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.RoutineExcersices", b =>
                {
                    b.HasOne("TrainingApp.Application.Entities.Excercise", "Excercise")
                        .WithMany("RoutineExcersices")
                        .HasForeignKey("ExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingApp.Application.Entities.Routine", "Routine")
                        .WithMany("RoutineExcersices")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercise");

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Set", b =>
                {
                    b.HasOne("TrainingApp.Application.Entities.WorkoutExcersices", "WorkoutExcercises")
                        .WithMany("Sets")
                        .HasForeignKey("WorkoutExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutExcercises");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.WorkoutExcersices", b =>
                {
                    b.HasOne("TrainingApp.Application.Entities.Excercise", "Excercise")
                        .WithMany("WorkoutExcersices")
                        .HasForeignKey("ExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingApp.Application.Entities.Workout", "Workout")
                        .WithMany("WorkoutExcersices")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Excercise", b =>
                {
                    b.Navigation("RoutineExcersices");

                    b.Navigation("WorkoutExcersices");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Routine", b =>
                {
                    b.Navigation("Dates");

                    b.Navigation("RoutineExcersices");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.Workout", b =>
                {
                    b.Navigation("WorkoutExcersices");
                });

            modelBuilder.Entity("TrainingApp.Application.Entities.WorkoutExcersices", b =>
                {
                    b.Navigation("Sets");
                });
#pragma warning restore 612, 618
        }
    }
}
